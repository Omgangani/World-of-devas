name: Build Android APK (World of Devas)

on:
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: List repo files (debug)
        run: ls -la

      - name: Unzip project kit
        run: |
          # find the zip we uploaded
          ZIP=$(ls | grep -i 'world_of_devas.*zip' || true)
          if [ -z "$ZIP" ]; then
            echo "ERROR: world_of_devas_android_build_kit.zip not found in repo root"; exit 1
          fi
          unzip -o "$ZIP" -d project
          ls -la project

      - name: Setup OpenJDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Install prerequisites
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip git zip

      - name: Install Android SDK commandline-tools
        run: |
          mkdir -p $HOME/android-sdk/cmdline-tools
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
          unzip -o cmdline-tools.zip -d $HOME/android-sdk/cmdline-tools
          # Move to "latest" to match sdkmanager path
          mkdir -p $HOME/android-sdk/cmdline-tools/latest
          mv $HOME/android-sdk/cmdline-tools/cmdline-tools/* $HOME/android-sdk/cmdline-tools/latest/
          export ANDROID_SDK_ROOT=$HOME/android-sdk
          yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT "platform-tools" "platforms;android-33" "build-tools;33.0.2"
        env:
          PATH: ${{ env.PATH }}

      - name: Download Godot headless (Linux x86_64)
        run: |
          # Change version here if your project uses different Godot version.
          wget -q --show-progress "https://downloads.tuxfamily.org/godotengine/4.2.1/Godot_v4.2.1-stable_linux_headless.64.zip" -O godot_headless.zip
          unzip -o godot_headless.zip
          mv Godot_v4.2.1-stable_linux_headless.64 godot
          chmod +x ./godot
          ./godot --version

      - name: Install Godot export templates
        run: |
          mkdir -p ~/.local/share/godot
          wget -q -O templates.tpz "https://downloads.tuxfamily.org/godotengine/4.2.1/Godot_v4.2.1-stable_export_templates.tpz"
          unzip -o templates.tpz -d ~/.local/share/godot/templates/4.2.1.stable
          ls -la ~/.local/share/godot/templates/4.2.1.stable

      - name: Prepare debug keystore
        run: |
          mkdir -p project/keystore
          if [ ! -f project/keystore/debug.keystore ]; then
            keytool -genkey -v -keystore project/keystore/debug.keystore -storepass android -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000 -dname "CN=Android Debug,O=Android,C=US"
          fi
          ls -la project/keystore

      - name: Run Godot export (build APK)
        working-directory: project
        run: |
          chmod +x ../godot
          # Ensure export_presets.cfg exists and an "Android" preset is present
          if [ ! -f export_presets.cfg ]; then
            echo "ERROR: export_presets.cfg missing inside project folder"; ls -la
            exit 1
          fi
          ../godot --headless --path . --export-release "Android" build/WorldOfDevas-debug.apk
          ls -la build || true

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: WorldOfDevas-apk
          path: project/build/WorldOfDevas-debug.apk
